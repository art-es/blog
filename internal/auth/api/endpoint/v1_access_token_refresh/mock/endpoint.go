// Code generated by MockGen. DO NOT EDIT.
// Source: endpoint.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	dto "github.com/art-es/blog/internal/auth/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockaccessTokenRefreshCase is a mock of accessTokenRefreshCase interface.
type MockaccessTokenRefreshCase struct {
	ctrl     *gomock.Controller
	recorder *MockaccessTokenRefreshCaseMockRecorder
}

// MockaccessTokenRefreshCaseMockRecorder is the mock recorder for MockaccessTokenRefreshCase.
type MockaccessTokenRefreshCaseMockRecorder struct {
	mock *MockaccessTokenRefreshCase
}

// NewMockaccessTokenRefreshCase creates a new mock instance.
func NewMockaccessTokenRefreshCase(ctrl *gomock.Controller) *MockaccessTokenRefreshCase {
	mock := &MockaccessTokenRefreshCase{ctrl: ctrl}
	mock.recorder = &MockaccessTokenRefreshCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockaccessTokenRefreshCase) EXPECT() *MockaccessTokenRefreshCaseMockRecorder {
	return m.recorder
}

// Use mocks base method.
func (m *MockaccessTokenRefreshCase) Use(ctx context.Context, in *dto.AccessTokenRefreshIn) (*dto.AccessTokenRefreshOut, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Use", ctx, in)
	ret0, _ := ret[0].(*dto.AccessTokenRefreshOut)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Use indicates an expected call of Use.
func (mr *MockaccessTokenRefreshCaseMockRecorder) Use(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Use", reflect.TypeOf((*MockaccessTokenRefreshCase)(nil).Use), ctx, in)
}
